name: Deploy to Staging

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push images
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ninjait
          IMAGE_TAG: staging-${{ github.sha }}
        run: |
          # Build API Gateway
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY-api:$IMAGE_TAG ./backend/api-gateway
          docker push $ECR_REGISTRY/$ECR_REPOSITORY-api:$IMAGE_TAG
          
          # Build Frontend
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY-frontend:$IMAGE_TAG ./frontend
          docker push $ECR_REGISTRY/$ECR_REPOSITORY-frontend:$IMAGE_TAG

      - name: Deploy to ECS
        run: |
          echo "Deploying to ECS staging environment..."
          # Add ECS deployment commands here

      - name: Run database migrations
        run: |
          echo "Running database migrations..."
          # Add migration commands here

      - name: Health check
        run: |
          echo "Performing health checks..."
          # Add health check commands here

      - name: Notify deployment
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: 'Staging deployment completed!'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        if: always()

