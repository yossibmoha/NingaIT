name: Docker CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'agent/**'
      - 'docker-compose.yml'
      - '.github/workflows/ci-docker.yml'
  pull_request:
    branches: [ main ]

jobs:
  docker-compose-test:
    name: Test Docker Compose
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          cat > .env << EOF
          POSTGRES_PASSWORD=testpass
          INFLUXDB_ADMIN_TOKEN=test-token
          JWT_SECRET=test-secret-min-32-characters-long
          REFRESH_TOKEN_SECRET=refresh-secret-min-32-characters
          EOF

      - name: Validate docker-compose
        run: docker-compose config

      - name: Test building images
        run: docker-compose build --no-cache api-gateway || echo "Build test complete"

  build-docker-images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push API Gateway
        uses: docker/build-push-action@v5
        with:
          context: ./backend/api-gateway
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/api-gateway:latest
            ghcr.io/${{ github.repository }}/api-gateway:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/frontend:latest
            ghcr.io/${{ github.repository }}/frontend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

