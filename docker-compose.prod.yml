version: '3.8'

services:
  # PostgreSQL - Primary database
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-ninjait}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-ninjait_prod}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/shared/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G

  # Dragonfly - High-performance cache
  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly:latest
    restart: unless-stopped
    command: dragonfly --maxmemory 1gb --save_schedule "*:*:*"
    volumes:
      - dragonfly_data:/data
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  # InfluxDB - Time-series metrics
  influxdb:
    image: influxdb:2.7-alpine
    restart: unless-stopped
    environment:
      INFLUXDB_DB: ${INFLUXDB_DB:-ninjait_metrics}
      INFLUXDB_ADMIN_USER: ${INFLUXDB_ADMIN_USER:-admin}
      INFLUXDB_ADMIN_PASSWORD: ${INFLUXDB_ADMIN_PASSWORD}
      INFLUXDB_HTTP_AUTH_ENABLED: "true"
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G

  # ClickHouse - Analytics database
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    restart: unless-stopped
    environment:
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-ninjait_analytics}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G

  # API Gateway
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      NODE_ENV: production
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER:-ninjait}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-ninjait_prod}
      DRAGONFLY_URL: redis://dragonfly:6379
      INFLUXDB_URL: http://influxdb:8086
      CLICKHOUSE_URL: http://clickhouse:8123
      JWT_SECRET: ${JWT_SECRET}
      PORT: 3001
    depends_on:
      - postgres
      - dragonfly
      - influxdb
      - clickhouse
    networks:
      - backend
      - frontend
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-https://api.ninjait.io}
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-https://api.ninjait.io}
    depends_on:
      - api-gateway
    networks:
      - frontend
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # Nginx - Reverse proxy & load balancer
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api-gateway
      - frontend
    networks:
      - frontend
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  postgres_data:
  dragonfly_data:
  influxdb_data:
  clickhouse_data:

